generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  name            String?
  email           String     @unique
  username        String     @unique
  hash            String
  isEmailVerified Boolean    @default(false) @map("is_email_verified")
  isActive        Boolean    @default(true) @map("is_active")
  posts           Posts[]
  comments        Comments[]

  @@map("users")
}

model Posts {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  content   String
  media     String?
  user      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?       @map("user_id")
  comments  Comments[]

  @@map("posts")
}

model Comments {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  content   String
  media     String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int?     @map("user_id")
  post      Posts    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String   @map("posts_id")

  @@map("comments")
}
